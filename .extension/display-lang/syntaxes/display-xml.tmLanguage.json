{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "DISPLAY",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"begin": "(<)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(?=(\\s[^>]*)?></\\2>)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.xml"
				},
				"2": {
					"name": "entity.name.tag.xml"
				},
				"3": {
					"name": "entity.name.tag.namespace.xml"
				},
				"4": {
					"name": "punctuation.separator.namespace.xml"
				},
				"5": {
					"name": "entity.name.tag.localname.xml"
				}
			},
			"end": "(>)(</)((?:([-_a-zA-Z0-9]+)(:))?([-_a-zA-Z0-9:]+))(>)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.tag.xml"
				},
				"2": {
					"name": "punctuation.definition.tag.xml"
				},
				"3": {
					"name": "entity.name.tag.xml"
				},
				"4": {
					"name": "entity.name.tag.namespace.xml"
				},
				"5": {
					"name": "punctuation.separator.namespace.xml"
				},
				"6": {
					"name": "entity.name.tag.localname.xml"
				},
				"7": {
					"name": "punctuation.definition.tag.xml"
				}
			},
			"name": "meta.tag.no-content.xml",
			"patterns": [
				{
					"include": "#tagStuff"
				}
			]
		},
		{
			"begin": "(</?)(?:([-\\w\\.]+)((:)))?([-\\w\\.:]+)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.xml"
				},
				"2": {
					"name": "entity.name.tag.namespace.xml"
				},
				"3": {
					"name": "entity.name.tag.xml"
				},
				"4": {
					"name": "punctuation.separator.namespace.xml"
				},
				"5": {
					"name": "entity.name.tag.localname.xml"
				}
			},
			"end": "(/?>)",
			"name": "meta.tag.xml",
			"patterns": [
				{
					"include": "#tagStuff"
				}
			]
		},
		{
			"begin": "(<\\$/?)(?:([-\\w\\.]+)((:)))?([-\\w\\.:]+)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.xml.display"
				},
				"2": {
					"name": "entity.name.tag.namespace.xml.display"
				},
				"3": {
					"name": "entity.name.tag.xml.display"
				},
				"4": {
					"name": "punctuation.separator.namespace.xml.display"
				},
				"5": {
					"name": "entity.name.tag.localname.xml.display"
				}
			},
			"end": "(/?>)",
			"name": "meta.tag.xml.display",
			"patterns": [
				{
					"include": "#tagStuffDisplay"
				}
			]
		},
		{
			"begin": "(</\\$?)(?:([-\\w\\.]+)((:)))?([-\\w\\.:]+)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.xml"
				},
				"2": {
					"name": "entity.name.tag.namespace.xml"
				},
				"3": {
					"name": "entity.name.tag.xml"
				},
				"4": {
					"name": "punctuation.separator.namespace.xml"
				},
				"5": {
					"name": "entity.name.tag.localname.xml"
				}
			},
			"end": "(/?>)",
			"name": "meta.tag.xml",
			"patterns": [
				{
					"include": "#tagStuffDisplay"
				}
			]
		},
		{
			"begin": "(\\{\\{)([^\\}]*)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.xml.display"
				},
				"2": {
					"name": "entity.name.tag.namespace.xml.display"
				},
				"3": {
					"name": "entity.name.tag.xml.display"
				},
				"4": {
					"name": "punctuation.separator.namespace.xml.display"
				}
			},
			"end": "(\\}(.*?)\\})",
			"name": "meta.string.xml.display",
			"patterns": [
				{
					"include": "#tagStuffDisplay"
				}
			]
		},
		{
			"include": "#entity"
		},
		{
			"include": "#bare-ampersand"
		},
		{
			"begin": "(^[ \\t]+)?(?=<(?i:script)\\b(?!-))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.leading.html"
				}
			},
			"end": "(?!\\G)([ \\t]*$\\n?)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.embedded.trailing.html"
				}
			},
			"patterns": [
				{
					"begin": "(<)((?i:script))\\b",
					"beginCaptures": {
						"0": {
							"name": "meta.tag.metadata.script.start.html"
						},
						"1": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"2": {
							"name": "entity.name.tag.html"
						}
					},
					"end": "(/)((?i:script))(>)",
					"endCaptures": {
						"0": {
							"name": "meta.tag.metadata.script.end.html"
						},
						"1": {
							"name": "punctuation.definition.tag.begin.html"
						},
						"2": {
							"name": "entity.name.tag.html"
						},
						"3": {
							"name": "punctuation.definition.tag.end.html"
						}
					},
					"name": "meta.embedded.block.html",
					"patterns": [
						{
							"begin": "\\G",
							"end": "(?=/)",
							"patterns": [
								{
									"begin": "(>)",
									"beginCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.start.html"
										},
										"1": {
											"name": "punctuation.definition.tag.end.html"
										}
									},
									"end": "((<))(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.end.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										},
										"2": {
											"name": "source.js-ignored-vscode"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(?=</(?i:script))",
											"name": "source.js",
											"patterns": [
												{
													"begin": "(^[ \\t]+)?(?=//)",
													"beginCaptures": {
														"1": {
															"name": "punctuation.whitespace.comment.leading.js"
														}
													},
													"end": "(?!\\G)",
													"patterns": [
														{
															"begin": "//",
															"beginCaptures": {
																"0": {
																	"name": "punctuation.definition.comment.js"
																}
															},
															"end": "(?=</script)|\\n",
															"name": "comment.line.double-slash.js"
														}
													]
												},
												{
													"begin": "/\\*",
													"captures": {
														"0": {
															"name": "punctuation.definition.comment.js"
														}
													},
													"end": "\\*/|(?=</script)",
													"name": "comment.block.js"
												},
												{
													"include": "source.js"
												}
											]
										}
									]
								},
								{
									"begin": "\\G",
									"end": "(?ix:\n\t\t\t\t\t\t\t\t\t\t\t\t(?=>\t\t\t\t\t\t\t\t\t\t\t# Tag without type attribute\n\t\t\t\t\t\t\t\t\t\t\t\t  | type(?=[\\s=])\n\t\t\t\t\t\t\t\t\t\t\t\t  \t(?!\\s*=\\s*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\t\t\t\t\t\t\t\t# Empty\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | \"\"\t\t\t\t\t\t\t\t\t#   Values\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | ('|\"|)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext/\t\t\t\t\t\t\t# Text mime-types\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjavascript(1\\.[0-5])?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | x-javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | jscript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | livescript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-)?ecmascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | babel\t\t\t\t\t\t# Javascript variant currently\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t#   recognized as such\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | application/\t\t\t\t\t# Application mime-types\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(x-)?javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-)?ecmascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | module\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\\s\"'>]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)",
									"name": "meta.tag.metadata.script.start.html",
									"patterns": [
										{
											"include": "#attribute"
										}
									]
								},
								{
									"begin": "(?ix:\n\t\t\t\t\t\t\t\t\t\t\t\t(?=\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype\\s*=\\s*\n\t\t\t\t\t\t\t\t\t\t\t\t\t('|\"|)\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext/\n\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tx-handlebars\n\t\t\t\t\t\t\t\t\t\t\t\t\t  | (x-(handlebars-)?|ng-)?template\n\t\t\t\t\t\t\t\t\t\t\t\t\t  | html\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\\s\"'>]\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)",
									"end": "((<))(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.end.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										},
										"2": {
											"name": "text.html.basic"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(>)",
											"endCaptures": {
												"1": {
													"name": "punctuation.definition.tag.end.html"
												}
											},
											"name": "meta.tag.metadata.script.start.html",
											"patterns": [
												{
													"include": "#attribute"
												}
											]
										},
										{
											"begin": "(?!\\G)",
											"end": "(?=</(?i:script))",
											"name": "text.html.basic",
											"patterns": [
												{
													"include": "text.html.basic"
												}
											]
										}
									]
								},
								{
									"begin": "(?=(?i:type))",
									"end": "(<)(?=/(?i:script))",
									"endCaptures": {
										"0": {
											"name": "meta.tag.metadata.script.end.html"
										},
										"1": {
											"name": "punctuation.definition.tag.begin.html"
										}
									},
									"patterns": [
										{
											"begin": "\\G",
											"end": "(>)",
											"endCaptures": {
												"1": {
													"name": "punctuation.definition.tag.end.html"
												}
											},
											"name": "meta.tag.metadata.script.start.html",
											"patterns": [
												{
													"include": "#attribute"
												}
											]
										},
										{
											"begin": "(?!\\G)",
											"end": "(?=</(?i:script))",
											"name": "source.unknown"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"repository": {
		"EntityDecl": {
			"begin": "(<)(x-layout)\\s+(%\\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.xml"
				},
				"2": {
					"name": "keyword.other.entity.xml"
				},
				"3": {
					"name": "punctuation.definition.entity.xml"
				},
				"4": {
					"name": "variable.language.entity.xml"
				},
				"5": {
					"name": "keyword.other.entitytype.xml"
				}
			},
			"end": "(>)",
			"patterns": [
				{
					"include": "#doublequotedString"
				},
				{
					"include": "#singlequotedString"
				}
			]
		},
		"bare-ampersand": {
			"match": "&",
			"name": "invalid.illegal.bad-ampersand.xml"
		},
		"doublequotedString": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.xml"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.xml"
				}
			},
			"name": "string.quoted.double.xml",
			"patterns": [
				{
					"include": "#entity"
				},
				{
					"include": "#bare-ampersand"
				}
			]
		},
		"entity": {
			"captures": {
				"1": {
					"name": "punctuation.definition.constant.xml"
				},
				"3": {
					"name": "punctuation.definition.constant.xml"
				}
			},
			"match": "(&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)",
			"name": "constant.character.entity.xml"
		},
		"internalSubset": {
			"begin": "(\\[)",
			"captures": {
				"1": {
					"name": "punctuation.definition.constant.xml"
				}
			},
			"end": "(\\])",
			"name": "meta.internalsubset.xml",
			"patterns": [
				{
					"include": "#EntityDecl"
				},
				{
					"include": "#parameterEntity"
				},
				{
					"include": "#comments"
				}
			]
		},
		"parameterEntity": {
			"captures": {
				"1": {
					"name": "punctuation.definition.constant.xml"
				},
				"3": {
					"name": "punctuation.definition.constant.xml"
				}
			},
			"match": "(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)",
			"name": "constant.character.parameter-entity.xml"
		},
		"singlequotedString": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.xml"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.xml"
				}
			},
			"name": "string.quoted.single.xml",
			"patterns": [
				{
					"include": "#entity"
				},
				{
					"include": "#bare-ampersand"
				}
			]
		},
		"tagStuff": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "entity.other.attribute-name.namespace.xml"
						},
						"2": {
							"name": "entity.other.attribute-name.xml"
						},
						"3": {
							"name": "punctuation.separator.namespace.xml"
						},
						"4": {
							"name": "entity.other.attribute-name.localname.xml"
						}
					},
					"match": "(?:^|\\s+)(?:([-\\w.]+)((:)))?([-\\w.:]+)\\s*="
				},
				{
					"include": "#doublequotedString"
				},
				{
					"include": "#singlequotedString"
				}
			]
		},
		"tagStuffDisplay": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "entity.other.attribute-name.namespace.xml.display"
						},
						"2": {
							"name": "entity.other.attribute-name.xml.display"
						},
						"3": {
							"name": "punctuation.separator.namespace.xml"
						},
						"4": {
							"name": "entity.other.attribute-name.localname.xml.display"
						}
					},
					"match": "(?:^|\\s+)(?:([-\\w.]+)((:)))?(@?[-\\w.:]+)\\s*="
				},
				{
					"include": "#doublequotedString"
				},
				{
					"include": "#singlequotedString"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "<%--",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.xml"
						},
						"end": "--%>",
						"name": "comment.block.xml"
					}
				},
				{
					"begin": "<!--",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.xml"
						}
					},
					"end": "-->",
					"name": "comment.block.xml",
					"patterns": [
						{
							"begin": "--(?!>)",
							"captures": {
								"0": {
									"name": "invalid.illegal.bad-comments-or-CDATA.xml"
								}
							}
						}
					]
				}
			]
		}
	},
	"scopeName": "source.display.xml"
}