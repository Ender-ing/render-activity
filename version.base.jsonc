/**
 *
 * This is a template of the version.json file.
 *
 * (Note to self: create a documentation file for the version.json file!)
 *
**/
{
    // The global ignore list applies to all files and folders in all root directories
    // It is used to exclude files and folders from directory hash updates
    // Proper name selectors are as follows
    // *VALUE        => Any file/folder name that ends with "VALUE"
    // VALUE*        => Any file/folder name that starts with "VALUE"
    // *VALUE*       => Any file/folder name that contains "VALUE" (also applies to "VALUE" by itself)
    // VALUE         => Any file/folder name that matches "VALUE"
    "$global_ignore": [
        // Ignore GitHub files/folders
        ".git",
        ".gitignore",
        ".gitattributes",
        // This file is ignored because it can trigger an update on every build
        "gen.version.txt",
        // Markdown files are ignored because they currently do not affect the generated content
        "*.md"
    ],
    // The GitHub directory that includes all of the organisation's secrets!
    "$secrets": "https://github.com/Ender-ing/wre-secrets.git",
    // This is the default directory object
    // It is used to generate a directory object for any newly added root directories
    "$default": {
        // The hash value of the directory (its contents)
        "hash": null,
        // The hash files/folders ignore list for the directory
        // (same selector as the global ignore list)
        "ignore": [],
        // The GitHub repository
        "github": {
            // The name of the repository (the same as the name in the URL of the repository)
            "projectName": "PROJECT-NAME"
        },
        // Extra actions that need to be done to complete setup!
        "sourceActions": [
            // NOTE: in actions, path that start with "%%" point to the input directory specific to
            // this subdomain/item!
            // NOTE: in actions, path that start with "%" point to the root input directory that
            // contains all items/subdomains!
            {
                // Add a GitHub dependency need to work with this!
                "type": "add-github-dependency",
                // GitHub info
                "github": {
                    "projectName": "NAME"
                },
                // Destination
                "to": "%/.NAME"
                // NOTE: if you need to add a an extra github dependency, you must add it with the
                // name format: ".ext.NAME"
            },
            {
                // Duplicate a file that needs to be edited
                // (this is usually done to prepare secret files!)
                "type": "duplicate-incomplete-file",
                // Source file
                "from": "%%/PATH/TO/original.file",
                // Destination
                "to": "%%/PATH/TO/duplicate.file"
            },
            {
                // Replace values within your code!
                // (this is done to insert sensitive information!)
                "type": "strict-file-secret-insert",
                // Destination file to edit
                "to": "%%/PATH/TO/incomplete.file"
                // NOTE: this operation will fail if the type of the file does not exist within
                // the extension allowlist!
                // NOTE: this will replace strings that follow this format from the
                // $secrets GitHub repository:
                // [U+00E0DE][U+00E201][U+00E1DE]RAW-VALUE-ID[U+00E0DE][U+00E202][U+00E1DE]
                // RAW-VALUE-ID
                // You may use the online tool to get the ID for your specific need:
                // https://test.ender.ing/en/tools/unicode-hex-converter/
            }
            // ^^ REMEMBER! ^^
            // These actions edit the source files, not the final output!
        ],
        // Version info
        "version": {
            // (unlimited range)
            // Updated when major/important updated are detected
            // Updated on minor-version overflow
            "major": 0,
            // (0-99)
            // Updated when normal/minor updates are detected
            // Updated on patch-version overflow
            "minor": 0,
            // (0-99)
            // Updated when small patches are made
            // Updated if the version increase was triggered automatically (command-invoked)
            "patch": 0
        },
        // Decide if you allow automatic version increase
        "auto": true
    }
}